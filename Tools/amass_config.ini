# Copyright 2017 Jeff Foley. All rights reserved.
# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.

# Should only passive data sources be used without DNS resolution?
#mode = passive
# Would you like to use more active techniques, such as pulling
# certificates from discovered IP addresses?
#mode = active

# The directory that stores the Cayley graph database and other output files
# The default for Linux systems is: $HOME/.config/amass
#output_directory = amass

# The maximum number of concurrent DNS queries that can be performed during the enumeration.
#maximum_dns_queries = 20000

[network_settings]
# Single IP address or range (e.g. a.b.c.10-245)
#address = 192.168.1.1
#cidr = 192.168.1.0/24
#asn = 26808
port = 80
port = 443
port = 8080

# Root domain names used in the enumeration
#[domains]
#domain = owasp.org
#domain = appsecusa.org
#domain = appsec.eu
#domain = appsec-labs.com

# DNS resolvers used globally by the amass package
#[resolvers]
#score_resolvers = true
#monitor_resolver_rate = true
#resolver = 1.1.1.1 ; Cloudflare
#resolver = 8.8.8.8 ; Google
#resolver = 64.6.64.6 ; Verisign
#resolver = 74.82.42.42 ; Hurricane Electric
#resolver = 1.0.0.1 ; Cloudflare Secondary
#resolver = 8.8.4.4 ; Google Secondary
#resolver = 64.6.65.6 ; Verisign Secondary
#resolver = 77.88.8.1 ; Yandex.DNS Secondary

# Are there any subdomains that are out of scope?
#[blacklisted]
#subdomain = education.appsec-labs.com
#subdomain = 2012.appsecusa.org

# Are there any data sources that should not be utilized?
#[disabled_data_sources]
#data_source = Ask
#data_source = Exalead
#data_source = IPv4Info

# Configure Amass to use a TinkerPop Server as the graph database
# For an example of Gremlin settings see: https://docs.microsoft.com/en-us/azure/cosmos-db/create-graph-gremlin-console
#[gremlin]
#url = wss://localhost:8182
#username =
#password =

# Settings related to brute forcing
#[bruteforce]
#enabled = true
#recursive = true
# Number of discoveries made in a subdomain before performing recursive brute forcing
# Default is 1
#minimum_for_recursive = 1
#wordlist_file = /usr/share/wordlists/all.txt
#wordlist_file = /usr/share/wordlists/all.txt # multiple lists can be used

# Would you like to permute resolved names?
[alterations]
enabled = true
# edit_distance specifies the number of times a primitive edit operation will be
# performed on a name sample during fuzzy label searching
edit_distance = 1
flip_words = true   # test-dev.owasp.org -> test-prod.owasp.org
flip_numbers = true # test1.owasp.org -> test2.owasp.org
add_words = true    # test.owasp.org -> test-dev.owasp.org
add_numbers = true  # test.owasp.org -> test1.owasp.org
#wordlist_file = /usr/share/wordlists/all.txt
#wordlist_file = /usr/share/wordlists/all.txt # multiple lists can be used

# Provide API key information for a data source
[AlienVault]
apikey = "2c5e223505a03fe63a8b655414dd0b05f69901a6c79a2be672a6d56b7dd39d54"

#[BinaryEdge]
apikey = "2ed98505-a192-4b72-8651-ccea0ba2ba8a"
ttl = 10080

[BufferOver]
ttl = 10080

[BuiltWith]
ttl = 10080

#[C99]
#apikey=
#ttl = 4320

[Censys]
apikey = "54482de1-2820-453a-bff6-84a3b8de66ba"
secret = "c0sNqrB0J3nI90f2hB7bzSq2KGD9cWKu"
ttl = 10080

[Chaos]
apikey=
ttl = 4320

#[CIRCL]
#username =
#password =

#[DNSDB]
#apikey =

[DNSTable]
ttl = 4320

#[FacebookCT]
#apikey=
#secret=
#ttl = 4320

[GitHub]
apikey = "7bbc77dae130bec43001df7c31a95e6c7ad4e8bd"
ttl = 4320

[HackerOne]
ttl = 4320

[HackerTarget]
ttl = 4320

[NetworksDB]
apikey = "a3103b0d-7c9f-4353-966b-cd4709d35396"

#[PassiveTotal]
#username =
#apikey =
#ttl = 10080

[RapidDNS]
ttl = 4320

[Riddler]
ttl = 4320

[SecurityTrails]
apikey = "a3103b0d-7c9f-4353-966b-cd4709d35396"
ttl = 1440

[Shodan]
apikey = "pIOlZD13g2UiblhGGyaOR2cqMwstOaZB"
ttl = 10080

[SiteDossier]
ttl = 4320

[Spyse]
apikey = "3f542fa5-3a5f-4ec5-bdad-9f548c7c4ac2"
ttl = 4320

# Provide your Twitter App Consumer API key and Consumer API secrety key
#[Twitter]
#apikey =
#secret =

# The apikey must be an API access token created through the Investigate management UI
[Umbrella]
apikey = "7ca94f80-aa14-48bc-8ed7-1eec5794e023"

# URLScan can be used without an API key, but the key allows new submissions to be made
[URLScan]
apikey = "270cefbd-a444-4cc6-9f84-2b4589278d6f"

[VirusTotal]
apikey = "e0fbed8db76b408bbca8383b0f0a99673f5620e8e9566e5384eb405cd79c6aa8"
ttl = 10080

[WhoisXML]
apikey= "at_twbkAM8foBwxpamrUzIf2p3UJSMLl"

[ZETAlytics]
apikey= "X1Nem0dbsfAzHiJOKagjZ5T7vneLw012lDBCd_hPzwB"
ttl = 1440

#[Cloudflare]
apikey= "4zA3Y93KufB3dexCAbkYZGklD60tqI-KhW_FuMG7"
